% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shinyalert.R
\name{shinyalert}
\alias{shinyalert}
\title{shinyalert}
\usage{
shinyalert(title = "", text = "", type = c("", "warning", "error",
  "success", "info", "input"), closeOnEsc = TRUE,
  closeOnClickOutside = FALSE, html = FALSE, showCancelButton = FALSE,
  showConfirmButton = TRUE, inputType = "text", inputValue = "",
  inputPlaceholder = "", confirmButtonText = "OK",
  confirmButtonCol = "#AEDEF4", cancelButtonText = "Cancel",
  animation = TRUE, imageUrl = NULL, imageWidth = 100,
  imageHeight = 100, className = "", callbackR = NULL,
  callbackJS = NULL)
}
\arguments{
\item{title}{The title of the modal.}

\item{text}{The modal's text.}

\item{type}{The type of the modal. There are 4 built-in types which will show
a corresponding icon: \code{"warning"}, \code{"error"}, \code{"success"} and
\code{"info"}. You can also set \code{type="input"} to get a prompt
in the modal where the user can enter a response. By default, the modal has
no type.}

\item{closeOnEsc}{If \code{TRUE}, the user can dismiss the modal by
pressing the Escape key.}

\item{closeOnClickOutside}{If \code{TRUE}, the user can dismiss the modal by
clicking outside it.}

\item{html}{If \code{TRUE}, the content of the title and text will not be
escaped. By default, the content in the title and text are escaped, so any
HTML tags will not render as HTML.}

\item{showCancelButton}{If \code{TRUE}, a "Cancel" button will be shown,
which the user can click on to dismiss the modal.}

\item{showConfirmButton}{If \code{TRUE}, a "OK" button
will be shown. Make sure to either use \code{timer}, \code{closeOnEsc}, or
\code{closeOnClickOutside} to allow the user a way to close the modal.}

\item{inputType}{When using \code{type="input"}, change the type of the input
field. The input type can be \code{"number"}, \code{"text"},
\code{"password"}, or any other valid HTML input type.}

\item{inputValue}{When using \code{type="input"}, specify a default
value that you want the input to show initially.}

\item{inputPlaceholder}{When using \code{type="input"}, specify a placeholder
text in the input.}

\item{confirmButtonText}{The text in the "OK" button.}

\item{confirmButtonCol}{The background colour of the "OK" button
(must be a HEX value).}

\item{cancelButtonText}{The text in the "Cancel" button.}

\item{animation}{If \code{FALSE}, the modal's animation will be disabled.
Possible values: \code{FALSE}, \code{TRUE}, \code{"slide-from-top"},
\code{"slide-from-bottom"}, \code{"pop"} (the default animation when
\code{animation=TRUE}).}

\item{imageUrl}{Add a custom icon to the modal.}

\item{imageWidth}{Width of the custom image icon, in pixels.}

\item{imageHeight}{Height of the custom image icon, in pixels.}

\item{className}{A custom CSS class name for the modal's container.}

\item{callbackR}{An R function to call when the modal exits. The value of the
modal is passed to this function as an argument. When there is no input field
in the modal, the value of the modal is either \code{TRUE} or \code{FALSE}
depending if the user clicked "OK" or exited/canceled the modal. When there
is an input field, the value of the modal is the value the user entered.}

\item{callbackJS}{A JavaScript function to call when the modal exits. The
value of the modal is passed to this function as an argument. See the
\code{callbackR} arugment for more information on the value of the modal.}
}
\description{
shinyalert
}
